        // 6-10. 생성자에 대한 설명으로 옳지 않은 것은? b, e
        b. 생성자는 객체를 생성하기 위한 것이다
        -> 생성자는 객체를 초기화하기 위한 것이다.
        -> 객체 생성은 new 연산자에 의해 생성된다.
        e. 생성자는 오버로딩 할 수 없다.
        -> 생성자도 오버로딩 가능하다.

        // 6-11. this에 대한 설명으로 맞지 않은 것은? b
        b. 클래스 내에서라면 어디서든 사용할 수 있다
        -> 인스턴스 메서드 내에서만 사용 가능하다.
        -> this는 인스턴스에 대한 참조변수이므로, 인스턴스 생성없이 사용가능한 static 메서드에서는 사용 불가하다,

        // 6-12. 오버로딩이 성립하기 위한 조건이 아닌 것은? c, d
        c. 리턴타입이 달라야 한다 -> 리턴타입은 오버로딩에 영향을 주지 않는다.");
        d. 매개변수의 이름이 달라야 한다 -> 매개변수 타입, 개수가 오버로딩 성립 조건이다.

        // 6-13. 다음 중 아래의 add메서드를 올바르게 오버로딩 한 것은? b, c, d


        // 6-14. 다음 중 초기화에 대한 설명으로 옳지 않은 것은? c, e
        c. 초기화 블럭보다 생성자가 먼저 수행된다. -> 생성자는 가장 마지막에 수행된다.
        e. 클래스 변수보다 인스턴스 변수가 먼저 초기화 된다 -> 클래스 변수는 클래스 로딩 시 초기화된다.

        // 6-15. 다음 중 인스턴스 변수의 초기화 순서가 올바른 것은? a
        a. 기본값 -> 명시적 초기화 -> 초기화 블럭 -> 생성자

        // 6-16. 다음 중 지역 변수에 대한 설명으로 옳지 않은 것은? a, e
        a. 자동 초기화되므로 별도의 초기화가 필요없다. -> 지역변수는 사용 전 반드시 초기화가 필요하다.
        e. 힙(heap)영역에 생성되며 가비지 컬렉터에 의해 소멸된다. -> 인스턴스에 대한 설명이다, 참조변수는 스택 영역에 생성된다.

        // 6-17. 호출 스택이 다음과 같은 상황일 때 옳지 않은 설명은? b
        b. println메서드를 제외한 나머지 메서드들은 모두 종료된 상태이다.
        -> 종료된 상태가 아닌 대기 중인 상태다.
        -> 메서드가 종료되면 호출 스택에서 제거된다.

        // 6-18. 다음 코드를 컴파일하면 에러가 발생한다. 컴파일 에러가 발생하는 라인과 그 이유를 설명하시오.
        A, B, D
        -> 모두 static멤버가 (인스턴스 생성 없이)인스턴스 멤버를 접근해서 에러가 발생한다.

        // 6-19. 다음 코드의 실행 결과를 예측해서 적으시오
        ABC123
        After change: ABC123456
